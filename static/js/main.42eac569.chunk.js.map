{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/phonebook/phonebook-slice.js","redux/store.js","Components/ContactForm/ContactForm.js","redux/phonebook/phonebook-selectors.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","filter","createReducer","_","payload","combineReducers","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","name","phone","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","store","configureStore","reducer","filterWord","middleware","getDefaultMiddleware","devTools","process","ContactForm","contacts","useState","setName","setPhone","handleChange","e","currentTarget","value","className","styles","contact__form","onSubmit","preventDefault","find","item","alert","label__form","contact__input","type","pattern","title","required","onChange","button__submit","getFilter","state","Filter","useSelector","dispatch","useDispatch","filter__wrapper","filter__label","filter__input","target","ContactList","loading","keyWord","filteredEl","data","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactList","Loader","color","height","width","timeout","map","contact","contactList__item","contactList__button","onClick","id","App","isFetching","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42eac569.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__W3Sxw\",\"contactList__item\":\"ContactList_contactList__item__lpohh\",\"contactList__button\":\"ContactList_contactList__button__2XCFE\",\"Loader\":\"ContactList_Loader__2B0oD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__wrapper\":\"Filter_filter__wrapper__2prlM\",\"filter__label\":\"Filter_filter__label___R4_i\",\"filter__input\":\"Filter_filter__input__vdW0e\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './phonebook-actions';\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  filter,\n});\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61267f4c3ab4100017a68fa0.mockapi.io/api/v1/',\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => `contacts/`,\n      providesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    createContact: builder.mutation({\n      query: ({ name, phone }) => ({\n        url: 'contacts/',\n        method: 'POST',\n        body: {\n          name,\n          phone,\n        },\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useCreateContactMutation,\n} = contactsApi;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport filterWord from './phonebook/phonebook-reducer';\nimport { contactsApi } from './phonebook/phonebook-slice';\n\nconst store = configureStore({\n  reducer: {\n    filterWord,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","import { useState } from 'react';\nimport { useCreateContactMutation } from 'redux/phonebook/phonebook-slice';\n\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = ({ contacts }) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [createContact] = useCreateContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const coincidence = contacts.find(item => item.name === name);\n    if (coincidence) {\n      alert(`${name} is already in contacts`);\n      setName('');\n      setPhone('');\n      return;\n    }\n\n    createContact({ name, phone });\n\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={styles.contact__form} onSubmit={handleSubmit}>\n      <label className={styles.label__form}>\n        Name\n        <input\n          className={styles.contact__input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.label__form}>\n        Number\n        <input\n          className={styles.contact__input}\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.button__submit} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.filterWord.filter;\n\nexport const getVisibleContacts = (data, keyWord) => {\n  const normalizedFilter = keyWord.toLowerCase();\n\n  if (!data) {\n    return;\n  }\n\n  return data.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/phonebook/phonebook-actions';\nimport { getFilter } from 'redux/phonebook/phonebook-selectors';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeValue = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <div className={styles.filter__wrapper}>\n      <label className={styles.filter__label}>\n        Find contacts by name\n        <input\n          className={styles.filter__input}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={onChangeValue}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { useDeleteContactMutation } from 'redux/phonebook/phonebook-slice';\nimport {\n  getFilter,\n  getVisibleContacts,\n} from 'redux/phonebook/phonebook-selectors';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, loading }) => {\n  const [deleteContact] = useDeleteContactMutation();\n  const keyWord = useSelector(getFilter);\n\n  const onDeleteContact = id => deleteContact(id);\n\n  const filteredEl = getVisibleContacts(contacts, keyWord);\n\n  return (\n    <ul className={styles.contactList}>\n      {loading && (\n        <div className={styles.Loader}>\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        </div>\n      )}\n      {filteredEl &&\n        filteredEl.map(contact => (\n          <li className={styles.contactList__item} key={contact.id}>\n            {contact.name} {contact.phone}\n            <button\n              className={styles.contactList__button}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Удалить\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useFetchContactsQuery } from './redux/phonebook/phonebook-slice';\nimport ContactForm from './Components/ContactForm';\nimport Filter from './Components/Filter';\nimport ContactList from './Components/ContactList';\n\nimport './App.css';\n\nconst App = () => {\n  const { data, isFetching } = useFetchContactsQuery();\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={data} />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList contacts={data} loading={isFetching} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__form\":\"ContactForm_contact__form__3PWBc\",\"label__form\":\"ContactForm_label__form__bx7zG\",\"contact__input\":\"ContactForm_contact__input__3Jcr-\",\"button__submit\":\"ContactForm_button__submit__3A_TK\"};"],"sourceRoot":""}